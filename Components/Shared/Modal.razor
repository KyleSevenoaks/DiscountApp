<div class="fixed inset-0 z-50 flex items-end md:items-center justify-center" role="dialog"
    aria-modal="true" @onclick="BackdropClick">
    <div class="w-full md:w-auto">
        <!-- Backdrop with fade -->
        <div class="absolute inset-0 bg-black/50 transition-opacity duration-300 @(isMounted && !isClosing ? "opacity-100" : "opacity-0")"></div>
        <div class="relative bg-white rounded-t-2xl md:rounded-lg shadow-2xl w-full md:max-w-md p-6 transform transition-transform duration-300 @(isMounted && !isClosing ? "translate-y-0" : "translate-y-full") md:translate-y-0"
            @onclick:stopPropagation="true">
            <!-- Drag handle for mobile -->
            <div class="mx-auto mb-3 h-1.5 w-12 rounded-full bg-gray-300 md:hidden"></div>

            <h4 class="text-lg font-semibold mb-2">@Title</h4>
            <p class="text-gray-700 mb-6">@Message</p>

            <div class="flex flex-col md:flex-row md:justify-end gap-3">
                <button @onclick="HandleConfirm"
                    class="w-full md:w-auto px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-orange-400">
                    @ConfirmText
                </button>
                <button @onclick="HandleCancel"
                    class="w-full md:w-auto px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400">
                    @CancelText
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; } = "Dialog Title";

    [Parameter]
    public string Message { get; set; } = "Dialog message goes here.";

    [Parameter]
    public string ConfirmText { get; set; } = "Confirm";

    [Parameter]
    public string CancelText { get; set; } = "Cancel";

    [Parameter]
    public EventCallback OnConfirm { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private bool isMounted = false;
    private bool isClosing = false;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            isMounted = true;
            StateHasChanged();
        }
    }

    private Task BackdropClick() => HandleCancel();

    private async Task HandleConfirm()
    {
        isClosing = true;
        StateHasChanged();
        await Task.Delay(250);
        await OnConfirm.InvokeAsync();
    }

    private async Task HandleCancel()
    {
        isClosing = true;
        StateHasChanged();
        await Task.Delay(250);
        await OnCancel.InvokeAsync();
    }
}