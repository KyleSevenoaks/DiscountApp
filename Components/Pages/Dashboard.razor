
@page "/dashboard"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Web
@using DiscountApp.Components.Shared

@if (showModal && selectedDiscount != null)
{
    <Modal Title="Bekreft rabattkjøp"
           Message=@($"Er du sikker på at du vil kjøpe denne {selectedDiscount.DiscountPercentage}% rabattkoden fra {selectedDiscount.MerchantName} for {FormatPrice(selectedDiscount.Price)}?")
           ConfirmText="Bekreft kjøp"
           CancelText="Avbryt"
           OnConfirm="ConfirmClaim"
           OnCancel="CancelClaim" />
}

<div class="min-h-screen bg-gray-50 py-6">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- User Profile Section -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
            <div class="flex items-center space-x-4">
                <div class="relative">
                    <img class="h-16 w-16 rounded-full object-cover" src="@currentUser.AvatarUrl"
                        alt="@currentUser.Name's avatar" />
                    <div class="absolute bottom-0 right-0 h-4 w-4 rounded-full bg-green-400 border-2 border-white">
                    </div>
                </div>
                <div>
                    <h2 class="text-2xl font-bold text-gray-900">Velkommen tilbake, @currentUser.Name!</h2>
                    <p class="text-sm text-gray-500">@currentUser.UnionName</p>
                    <p class="text-gray-500">Du har @availableDiscounts.Count() rabattkoder tilgjengelig</p>
                </div>
            </div>
        </div>

        <!-- Available Discounts Section -->
        <div class="space-y-6">
            <h3 class="text-lg font-semibold text-gray-900">Tilgjengelige rabatter</h3>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                @foreach (var discount in availableDiscounts)
                {
                    <DiscountCard 
                        MerchantName="@discount.MerchantName"
                        MerchantLogo="@discount.MerchantLogo"
                        Description="@discount.Description"
                        DiscountPercentage="@discount.DiscountPercentage"
                        Price="@discount.Price"
                        AvailableCodes="@discount.AvailableCodes"
                        ShowCode="false"
                        ActionButtonText="Kjøp"
                        OnAction="() => ShowClaimModal(discount)" />
                }
            </div>
        </div>
    </div>
</div>



@inject IJSRuntime JS
@inject NavigationManager NavigationManager

@code {
    private static readonly System.Globalization.CultureInfo NbNo = System.Globalization.CultureInfo.GetCultureInfo("nb-NO");
    private string FormatPrice(decimal price) => price.ToString("C0", NbNo);

    private UserProfile currentUser = new()
    {
        Name = "Kyle Sevenoaks",
        AvatarUrl = "https://ui-avatars.com/api/?name=Kyle+Sevenoaks&background=0D8ABC&color=fff",
        UnionName = "Tech Workers Union"
    };

    private List<DiscountOffer> availableDiscounts = new()
{
new DiscountOffer
{
Id = 1,
MerchantName = "Odeon",
MerchantLogo = "https://ui-avatars.com/api/?name=Odeon&background=396eca&color=fff",
Description = "Rabaterte priser på kinobilletter for medlemmer",
DiscountPercentage = 100,
Price = 89m,
AvailableCodes = 1020
},
new DiscountOffer
{
Id = 2,
MerchantName = "NF Kino",
MerchantLogo = "https://ui-avatars.com/api/?name=NF+Kino&background=e91b72&color=fff",
Description = "Ekstra rabaterte priser på kinobilletter for medlemmer",
DiscountPercentage = 100,
Price = 89m,
AvailableCodes = 1075
},
new DiscountOffer
{
Id = 3,
MerchantName = "Foodora",
MerchantLogo = "https://ui-avatars.com/api/?name=Amazon&background=FF9900&color=fff",
Description = "Prime membership discount for first-time subscribers",
DiscountPercentage = 30,
Price = 79m,
AvailableCodes = 2200
},
new DiscountOffer
{
Id = 4,
MerchantName = "Uber Eats",
MerchantLogo = "https://ui-avatars.com/api/?name=Uber+Eats&background=000000&color=fff",
Description = "Save on your next 3 food deliveries",
DiscountPercentage = 20,
Price = 99m,
AvailableCodes = 140
}
};


    private bool showModal = false;
    private DiscountOffer? selectedDiscount;

    private void ShowClaimModal(DiscountOffer discount)
    {
        selectedDiscount = discount;
        showModal = true;
        StateHasChanged();
    }

    private void ConfirmClaim()
    {
        if (selectedDiscount != null)
        {
            Console.WriteLine($"ClaimDiscount invoked for id={selectedDiscount.Id}, selected={selectedDiscount.MerchantName}");
            availableDiscounts.Remove(selectedDiscount);
            showModal = false;
            selectedDiscount = null;
            // Redirect to VippsRedirect page
            NavigationManager.NavigateTo("/vipps-redirect", forceLoad: true);
        }
    }

    private void CancelClaim()
    {
        showModal = false;
        selectedDiscount = null;
    }

    public class UserProfile
    {
        public string Name { get; set; } = "";
        public string AvatarUrl { get; set; } = "";
        public string UnionName { get; set; } = "";
    }

    public class DiscountOffer
    {
        public int Id { get; set; }
        public string MerchantName { get; set; } = "";
        public string MerchantLogo { get; set; } = "";
        public string Description { get; set; } = "";
        public int DiscountPercentage { get; set; }
        public decimal Price { get; set; }
        public int AvailableCodes { get; set; }
    }


}